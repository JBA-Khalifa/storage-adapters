{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/impl-serde-0.3.1","program":"/home/iamkhalifaMBA/.rustup/toolchains/nightly-2020-11-16-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","impl_serde","--edition=2018","/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/impl-serde-0.3.1/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"std\"","-C","metadata=1a7c343d41187b3b","-C","extra-filename=-1a7c343d41187b3b","--out-dir","/home/iamkhalifaMBA/Documents/GitHub/storage-adapters/target/rls/debug/deps","-L","dependency=/home/iamkhalifaMBA/Documents/GitHub/storage-adapters/target/rls/debug/deps","--extern","serde=/home/iamkhalifaMBA/Documents/GitHub/storage-adapters/target/rls/debug/deps/libserde-c806c0e6858888be.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/iamkhalifaMBA/.rustup/toolchains/nightly-2020-11-16-x86_64-unknown-linux-gnu"],"output":"/home/iamkhalifaMBA/Documents/GitHub/storage-adapters/target/rls/debug/deps/libimpl_serde-1a7c343d41187b3b.rmeta"},"prelude":{"crate_id":{"name":"impl_serde","disambiguator":[702792569389521179,14801036961897725781]},"crate_root":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/impl-serde-0.3.1/src","external_crates":[{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/impl-serde-0.3.1/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[6613225743082300914,1742833353142201501]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/impl-serde-0.3.1/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[11184320297803335556,13858837857589462231]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/impl-serde-0.3.1/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[7052056008796586215,10378193753915807487]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/impl-serde-0.3.1/src/lib.rs","num":4,"id":{"name":"alloc","disambiguator":[8506919001764560201,14392486609026958309]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/impl-serde-0.3.1/src/lib.rs","num":5,"id":{"name":"std","disambiguator":[9498309081039753288,17146171879327973561]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/impl-serde-0.3.1/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[1008138081647881344,7429076406658465872]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/impl-serde-0.3.1/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[18264666156363143077,9460446616166571952]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/impl-serde-0.3.1/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[17775355873057806890,2808787496394745820]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/impl-serde-0.3.1/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[8284212792698810014,4529520408597658105]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/impl-serde-0.3.1/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[13548000852589409421,10665128085775411653]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/impl-serde-0.3.1/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[16403156102386502054,14681479186798415575]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/impl-serde-0.3.1/src/lib.rs","num":12,"id":{"name":"addr2line","disambiguator":[4744697088543495219,7482183864854537400]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/impl-serde-0.3.1/src/lib.rs","num":13,"id":{"name":"gimli","disambiguator":[14313419318706340198,11848972895184007450]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/impl-serde-0.3.1/src/lib.rs","num":14,"id":{"name":"object","disambiguator":[348214952294252407,14922950223543918643]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/impl-serde-0.3.1/src/lib.rs","num":15,"id":{"name":"miniz_oxide","disambiguator":[16253973858345478383,14509903005583630510]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/impl-serde-0.3.1/src/lib.rs","num":16,"id":{"name":"adler","disambiguator":[2318734762227737502,9918336217617466618]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/impl-serde-0.3.1/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[14919014723969444451,7741459782339596399]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/impl-serde-0.3.1/src/lib.rs","num":18,"id":{"name":"serde","disambiguator":[6362660467382893888,9920192712571556691]}},{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/impl-serde-0.3.1/src/lib.rs","num":19,"id":{"name":"serde_derive","disambiguator":[1844568340410653156,2298619896270240766]}}],"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/impl-serde-0.3.1/src/lib.rs","byte_start":342,"byte_end":2316,"line_start":9,"line_end":85,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":18,"index":0},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/impl-serde-0.3.1/src/lib.rs","byte_start":512,"byte_end":517,"line_start":20,"line_end":20,"column_start":9,"column_end":14},"alias_span":null,"name":"serde","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/impl-serde-0.3.1/src/lib.rs","byte_start":342,"byte_end":2316,"line_start":9,"line_end":85,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/impl-serde-0.3.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7}],"decl_id":null,"docs":" Serde serialization support for uint and fixed hash.\n","sig":null,"attributes":[{"value":"/ Serde serialization support for uint and fixed hash.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/impl-serde-0.3.1/src/lib.rs","byte_start":342,"byte_end":398,"line_start":9,"line_end":9,"column_start":1,"column_end":57}},{"value":"no_std","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/impl-serde-0.3.1/src/lib.rs","byte_start":400,"byte_end":410,"line_start":11,"line_end":11,"column_start":1,"column_end":11}}]},{"kind":"Mod","id":{"krate":0,"index":7},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/impl-serde-0.3.1/src/serialize.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"serialize","qualname":"::serialize","value":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/impl-serde-0.3.1/src/serialize.rs","parent":null,"children":[{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":19},{"krate":0,"index":68},{"krate":0,"index":81},{"krate":0,"index":77},{"krate":0,"index":78},{"krate":0,"index":74},{"krate":0,"index":75},{"krate":0,"index":21},{"krate":0,"index":22},{"krate":0,"index":24},{"krate":0,"index":25},{"krate":0,"index":27},{"krate":0,"index":29},{"krate":0,"index":31},{"krate":0,"index":83},{"krate":0,"index":103},{"krate":0,"index":97},{"krate":0,"index":99},{"krate":0,"index":92},{"krate":0,"index":94},{"krate":0,"index":34},{"krate":0,"index":37},{"krate":0,"index":50}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":17},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/impl-serde-0.3.1/src/serialize.rs","byte_start":3163,"byte_end":3169,"line_start":23,"line_end":23,"column_start":8,"column_end":14},"name":"to_hex","qualname":"::serialize::to_hex","value":"pub fn to_hex(&[u8], bool) -> String","parent":null,"children":[],"decl_id":null,"docs":" Serialize given bytes to a 0x-prefixed hex string.","sig":null,"attributes":[{"value":"/ Serialize given bytes to a 0x-prefixed hex string.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/impl-serde-0.3.1/src/serialize.rs","byte_start":2837,"byte_end":2891,"line_start":17,"line_end":17,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/impl-serde-0.3.1/src/serialize.rs","byte_start":2892,"byte_end":2895,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ If `skip_leading_zero` initial 0s will not be printed out,","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/impl-serde-0.3.1/src/serialize.rs","byte_start":2896,"byte_end":2958,"line_start":19,"line_end":19,"column_start":1,"column_end":63}},{"value":"/ unless the byte string is empty, in which case `0x0` will be returned.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/impl-serde-0.3.1/src/serialize.rs","byte_start":2959,"byte_end":3033,"line_start":20,"line_end":20,"column_start":1,"column_end":75}},{"value":"/ The results are consistent with `serialize_uint` output if the flag is","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/impl-serde-0.3.1/src/serialize.rs","byte_start":3034,"byte_end":3108,"line_start":21,"line_end":21,"column_start":1,"column_end":75}},{"value":"/ on and `serialize_raw` if the flag is off.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/impl-serde-0.3.1/src/serialize.rs","byte_start":3109,"byte_end":3155,"line_start":22,"line_end":22,"column_start":1,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":69},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/impl-serde-0.3.1/src/serialize.rs","byte_start":4390,"byte_end":4403,"line_start":71,"line_end":71,"column_start":2,"column_end":15},"name":"MissingPrefix","qualname":"::serialize::FromHexError::MissingPrefix","value":"FromHexError::MissingPrefix","parent":{"krate":0,"index":68},"children":[],"decl_id":null,"docs":" The `0x` prefix is missing.\n","sig":null,"attributes":[{"value":"/ The `0x` prefix is missing.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/impl-serde-0.3.1/src/serialize.rs","byte_start":4357,"byte_end":4388,"line_start":70,"line_end":70,"column_start":2,"column_end":33}}]},{"kind":"StructVariant","id":{"krate":0,"index":71},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/impl-serde-0.3.1/src/serialize.rs","byte_start":4452,"byte_end":4462,"line_start":73,"line_end":73,"column_start":2,"column_end":12},"name":"InvalidHex","qualname":"::serialize::FromHexError::InvalidHex","value":"FromHexError::InvalidHex { character, index }","parent":{"krate":0,"index":68},"children":[],"decl_id":null,"docs":" Invalid (non-hex) character encountered.\n","sig":null,"attributes":[{"value":"/ Invalid (non-hex) character encountered.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/impl-serde-0.3.1/src/serialize.rs","byte_start":4406,"byte_end":4450,"line_start":72,"line_end":72,"column_start":2,"column_end":46}}]},{"kind":"Enum","id":{"krate":0,"index":68},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/impl-serde-0.3.1/src/serialize.rs","byte_start":4341,"byte_end":4353,"line_start":69,"line_end":69,"column_start":10,"column_end":22},"name":"FromHexError","qualname":"::serialize::FromHexError","value":"pub enum FromHexError {\n\n    /// The `0x` prefix is missing.\n    MissingPrefix,\n\n    /// Invalid (non-hex) character encountered.\n    InvalidHex {\n        /// The unexpected character.\n        character: char,\n        /// Index of that occurrence.\n        index: usize,\n    },\n}","parent":null,"children":[{"krate":0,"index":69},{"krate":0,"index":71}],"decl_id":null,"docs":" Decoding bytes from hex string error.\n","sig":null,"attributes":[{"value":"/ Decoding bytes from hex string error.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/impl-serde-0.3.1/src/serialize.rs","byte_start":4258,"byte_end":4299,"line_start":67,"line_end":67,"column_start":1,"column_end":42}}]},{"kind":"Function","id":{"krate":0,"index":24},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/impl-serde-0.3.1/src/serialize.rs","byte_start":5097,"byte_end":5105,"line_start":97,"line_end":97,"column_start":8,"column_end":16},"name":"from_hex","qualname":"::serialize::from_hex","value":"pub fn from_hex(&str) -> Result<Vec<u8>, FromHexError>","parent":null,"children":[],"decl_id":null,"docs":" Decode given hex string into a vector of bytes.","sig":null,"attributes":[{"value":"/ Decode given hex string into a vector of bytes.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/impl-serde-0.3.1/src/serialize.rs","byte_start":4934,"byte_end":4985,"line_start":93,"line_end":93,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/impl-serde-0.3.1/src/serialize.rs","byte_start":4986,"byte_end":4989,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ Returns an error if the string is not prefixed with `0x`","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/impl-serde-0.3.1/src/serialize.rs","byte_start":4990,"byte_end":5050,"line_start":95,"line_end":95,"column_start":1,"column_end":61}},{"value":"/ or non-hex characters are present.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/impl-serde-0.3.1/src/serialize.rs","byte_start":5051,"byte_end":5089,"line_start":96,"line_end":96,"column_start":1,"column_end":39}}]},{"kind":"Function","id":{"krate":0,"index":27},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/impl-serde-0.3.1/src/serialize.rs","byte_start":6355,"byte_end":6368,"line_start":147,"line_end":147,"column_start":8,"column_end":21},"name":"serialize_raw","qualname":"::serialize::serialize_raw","value":"pub fn serialize_raw<S>(&mut [u8], &[u8], S) -> Result<S::Ok, S::Error> where\nS: Serializer","parent":null,"children":[],"decl_id":null,"docs":" Serializes a slice of bytes.\n","sig":null,"attributes":[{"value":"/ Serializes a slice of bytes.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/impl-serde-0.3.1/src/serialize.rs","byte_start":6315,"byte_end":6347,"line_start":146,"line_end":146,"column_start":1,"column_end":33}}]},{"kind":"Function","id":{"krate":0,"index":29},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/impl-serde-0.3.1/src/serialize.rs","byte_start":6642,"byte_end":6651,"line_start":159,"line_end":159,"column_start":8,"column_end":17},"name":"serialize","qualname":"::serialize::serialize","value":"pub fn serialize<S>(&[u8], S) -> Result<S::Ok, S::Error> where S: Serializer","parent":null,"children":[],"decl_id":null,"docs":" Serializes a slice of bytes.\n","sig":null,"attributes":[{"value":"/ Serializes a slice of bytes.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/impl-serde-0.3.1/src/serialize.rs","byte_start":6602,"byte_end":6634,"line_start":158,"line_end":158,"column_start":1,"column_end":33}}]},{"kind":"Function","id":{"krate":0,"index":31},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/impl-serde-0.3.1/src/serialize.rs","byte_start":6946,"byte_end":6960,"line_start":170,"line_end":170,"column_start":8,"column_end":22},"name":"serialize_uint","qualname":"::serialize::serialize_uint","value":"pub fn serialize_uint<S>(&mut [u8], &[u8], S) -> Result<S::Ok, S::Error> where\nS: Serializer","parent":null,"children":[],"decl_id":null,"docs":" Serialize a slice of bytes as uint.","sig":null,"attributes":[{"value":"/ Serialize a slice of bytes as uint.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/impl-serde-0.3.1/src/serialize.rs","byte_start":6835,"byte_end":6874,"line_start":167,"line_end":167,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/impl-serde-0.3.1/src/serialize.rs","byte_start":6875,"byte_end":6878,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ The representation will have all leading zeros trimmed.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/impl-serde-0.3.1/src/serialize.rs","byte_start":6879,"byte_end":6938,"line_start":169,"line_end":169,"column_start":1,"column_end":60}}]},{"kind":"TupleVariant","id":{"krate":0,"index":85},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/impl-serde-0.3.1/src/serialize.rs","byte_start":7415,"byte_end":7420,"line_start":187,"line_end":187,"column_start":2,"column_end":7},"name":"Exact","qualname":"::serialize::ExpectedLen::Exact","value":"ExpectedLen::Exact(&'a mut [u8])","parent":{"krate":0,"index":83},"children":[],"decl_id":null,"docs":" Exact length in bytes.\n","sig":null,"attributes":[{"value":"/ Exact length in bytes.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/impl-serde-0.3.1/src/serialize.rs","byte_start":7387,"byte_end":7413,"line_start":186,"line_end":186,"column_start":2,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":88},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/impl-serde-0.3.1/src/serialize.rs","byte_start":7485,"byte_end":7492,"line_start":189,"line_end":189,"column_start":2,"column_end":9},"name":"Between","qualname":"::serialize::ExpectedLen::Between","value":"ExpectedLen::Between(usize, &'a mut [u8])","parent":{"krate":0,"index":83},"children":[],"decl_id":null,"docs":" A bytes length between (min; slice.len()].\n","sig":null,"attributes":[{"value":"/ A bytes length between (min; slice.len()].","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/impl-serde-0.3.1/src/serialize.rs","byte_start":7437,"byte_end":7483,"line_start":188,"line_end":188,"column_start":2,"column_end":48}}]},{"kind":"Enum","id":{"krate":0,"index":83},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/impl-serde-0.3.1/src/serialize.rs","byte_start":7368,"byte_end":7379,"line_start":185,"line_end":185,"column_start":10,"column_end":21},"name":"ExpectedLen","qualname":"::serialize::ExpectedLen","value":"pub enum ExpectedLen<'a> {\n\n    /// Exact length in bytes.\n    Exact(&'a mut [u8]),\n\n    /// A bytes length between (min; slice.len()].\n    Between(usize, &'a mut [u8]),\n}","parent":null,"children":[{"krate":0,"index":85},{"krate":0,"index":88}],"decl_id":null,"docs":" Expected length of bytes vector.\n","sig":null,"attributes":[{"value":"/ Expected length of bytes vector.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/impl-serde-0.3.1/src/serialize.rs","byte_start":7290,"byte_end":7326,"line_start":183,"line_end":183,"column_start":1,"column_end":37}}]},{"kind":"Function","id":{"krate":0,"index":37},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/impl-serde-0.3.1/src/serialize.rs","byte_start":7919,"byte_end":7930,"line_start":203,"line_end":203,"column_start":8,"column_end":19},"name":"deserialize","qualname":"::serialize::deserialize","value":"pub fn deserialize<'de, D>(D) -> Result<Vec<u8>, D::Error> where\nD: Deserializer","parent":null,"children":[],"decl_id":null,"docs":" Deserialize into vector of bytes.  This will allocate an O(n) intermediate\n string.\n","sig":null,"attributes":[{"value":"/ Deserialize into vector of bytes.  This will allocate an O(n) intermediate","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/impl-serde-0.3.1/src/serialize.rs","byte_start":7821,"byte_end":7899,"line_start":201,"line_end":201,"column_start":1,"column_end":79}},{"value":"/ string.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/impl-serde-0.3.1/src/serialize.rs","byte_start":7900,"byte_end":7911,"line_start":202,"line_end":202,"column_start":1,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":50},"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/impl-serde-0.3.1/src/serialize.rs","byte_start":8593,"byte_end":8614,"line_start":230,"line_end":230,"column_start":8,"column_end":29},"name":"deserialize_check_len","qualname":"::serialize::deserialize_check_len","value":"pub fn deserialize_check_len<'a, 'de, D>(D, ExpectedLen)\n-> Result<usize, D::Error> where D: Deserializer","parent":null,"children":[],"decl_id":null,"docs":" Deserialize into vector of bytes with additional size check.\n Returns number of bytes written.\n","sig":null,"attributes":[{"value":"/ Deserialize into vector of bytes with additional size check.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/impl-serde-0.3.1/src/serialize.rs","byte_start":8484,"byte_end":8548,"line_start":228,"line_end":228,"column_start":1,"column_end":65}},{"value":"/ Returns number of bytes written.","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/impl-serde-0.3.1/src/serialize.rs","byte_start":8549,"byte_end":8585,"line_start":229,"line_end":229,"column_start":1,"column_end":37}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/impl-serde-0.3.1/src/serialize.rs","byte_start":4622,"byte_end":4634,"line_start":82,"line_end":82,"column_start":28,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/impl-serde-0.3.1/src/serialize.rs","byte_start":4661,"byte_end":4673,"line_start":84,"line_end":84,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":23}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/impl-serde-0.3.1/src/serialize.rs","byte_start":7544,"byte_end":7555,"line_start":192,"line_end":192,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":36}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/impl-serde-0.3.1/src/serialize.rs","byte_start":8064,"byte_end":8071,"line_start":209,"line_end":209,"column_start":31,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":44},{"krate":0,"index":45},{"krate":0,"index":46},{"krate":0,"index":48}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/impl-serde-0.3.1/src/serialize.rs","byte_start":8808,"byte_end":8815,"line_start":238,"line_end":238,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":60},{"krate":0,"index":61},{"krate":0,"index":62},{"krate":0,"index":64}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/impl-serde-0.3.1/src/lib.rs","byte_start":543,"byte_end":552,"line_start":23,"line_end":23,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":7}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/impl-serde-0.3.1/src/serialize.rs","byte_start":4622,"byte_end":4634,"line_start":82,"line_end":82,"column_start":28,"column_end":40},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":68},"to":{"krate":5,"index":1725}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/impl-serde-0.3.1/src/serialize.rs","byte_start":4661,"byte_end":4673,"line_start":84,"line_end":84,"column_start":23,"column_end":35},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":68},"to":{"krate":1,"index":6604}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/impl-serde-0.3.1/src/serialize.rs","byte_start":7544,"byte_end":7555,"line_start":192,"line_end":192,"column_start":27,"column_end":38},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":83},"to":{"krate":1,"index":6604}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/impl-serde-0.3.1/src/serialize.rs","byte_start":8064,"byte_end":8071,"line_start":209,"line_end":209,"column_start":31,"column_end":38},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":40},"to":{"krate":18,"index":1358}},{"span":{"file_name":"/home/iamkhalifaMBA/.cargo/registry/src/github.com-1ecc6299db9ec823/impl-serde-0.3.1/src/serialize.rs","byte_start":8808,"byte_end":8815,"line_start":238,"line_end":238,"column_start":35,"column_end":42},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":54},"to":{"krate":18,"index":1358}}]}